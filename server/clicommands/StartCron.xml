<!--
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * Copyright 2022 Xyna GmbH, Germany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-->
<XynaCommandLineCommand>
  <CommandDefinition Name="startcron" Groups="Cron LS" Description="Register and start a new Cron Like Order.">
    <ExtendedDescription>
The optional Input consists of one or more Data-Tags. Each of the Data-Tags has the following attributes:
  IsList        : Indicates that the data is a list holding multiple values
  ReferenceName : The Data-Type of the Input
  ReferencePath : Path where the Data-Type is located
  VariableName  : Name of the member variable the Data is assigned to (must match the variable name specified in the definition of the Data-Type)
  
Each Data-Tag can either hold exactly one Value-Tag or one or more other Data-Tags, if the Data-Type is complex. If the nested Data is primitive it only has the VariableName-Attribute referencing to the member variable of the complex Data. In that case the VariableName must match the name of the member variable.

If the input data is a list then the Data-Tag gets the IsList-Attribute which is set to true. In that case the Data-Tag is followed by one or more Value-Tags where each holds the same type of Data.

The inner most Value-Tag holds a literal that is interpreted as the primitive data of the member variable it is being assigned to.

A sample input XML-file might look like this:

&lt;Input&gt;
  &lt;Data ReferenceName="mdmDataType" ReferencePath="mdmPath" VariableName="varName"&gt;
    &lt;Data VariableName="memberVarName"&gt;
      &lt;Value&gt;value&lt;/Value&gt;
    &lt;/Data&gt;
    ...
  &lt;/Data&gt;
  &lt;Data IsList="true" ReferenceName="mdmDataListType" ReferencePath="mdmPath" VariableName="varNameList"&gt;
    &lt;Value&gt;
      &lt;Data VariableName="memberVarName"&gt;
        &lt;Value&gt;value&lt;/Value&gt;
      &lt;/Data&gt;
      ...
    &lt;/Value&gt;
    &lt;Value&gt;
      &lt;Data VariableName="memberVarName"&gt;
        &lt;Value&gt;value&lt;/Value&gt;
      &lt;/Data&gt;
      ...
    &lt;/Value&gt;
    ...
  &lt;/Data&gt;
  ...
&lt;/Input&gt;
    </ExtendedDescription>
  </CommandDefinition>
  <Argument Name="label" Description="A name for the new Cron Like Order" Optional="true"/>
  <Argument Name="orderType" Description="The ordertype of the order to be started by the Cron Like Order"/>
  <Argument Name="interval" Description="Interval lenght between two executions. Use the value '0' for a single execution. Supported input is an integer value with a suffix denoting the scale in milliseconds (with the optional suffix [ms]) and for convenience also seconds [s], minutes [m], hours [h] and days [d]."/>
  <Argument Name="firstExecutionTime" Description="Date and time of the first execution. Use the value '0' to execute immediately. Supported inputs are ISO Timestamp YYYY-MM-DDThh:mm:ss[,f] and the milliseconds since 1970 for absolute times. For relative start time the only format supported is milliseconds."/>
  <Argument Name="timeZone" Description="Time zone associated with the first execution time. Only valid if the interval is a multiple of 24h. If no time zone is provided the first execution time is assumed to be in UTC." Optional="true"/>
  <BoolOption Name="dst" LongName="useDaylightSavingTime" Description="If the provided time zone has daylight saving time, then it is taken into account when executing intervals that are multiple of days." Optional="true"/>
  <BoolOption Name="r" LongName="relative" Description="Interpret the firstExecutionTime as a relative millisecond value."/>
  <BoolOption Name="d" LongName="disabled" Description="Create the order in disabled status"/>
  <Argument Name="onError" Description="Behavior if an error occurs. Allowed values are 'Disable', 'Drop' and 'Ignore'." Optional="true" />
  <Argument Name="inputPayloadFile" Description="Location of the file containing the payload that is used to execute the cron like order. Format: &lt;Input&gt;&lt;Data&gt;...&lt;/Data&gt;&lt;Data&gt;...&lt;/Data&gt;&lt;/Input&gt; (see callservice documentation)" Optional="true"/>
  <Argument Name="applicationName" Description="The application the ordertype belongs to." Optional="true"/>
  <Argument Name="versionName" Description="The version of the application the ordertype belongs to." Optional="true"/>
  <Argument Name="custom0" Description="Sets the custom0 field for the Cron Like Order." Optional="true"/>
  <Argument Name="custom1" Description="Sets the custom1 field for the Cron Like Order." Optional="true"/>
  <Argument Name="custom2" Description="Sets the custom2 field for the Cron Like Order." Optional="true"/>
  <Argument Name="custom3" Description="Sets the custom3 field for the Cron Like Order." Optional="true"/>
  <Argument Name="workspaceName" Description="The workspace the ordertype belongs to." Optional="true"/>
</XynaCommandLineCommand>
