<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<DataType xmlns="http://www.gip.com/xyna/xdev/xfractmod" IsAbstract="false" Label="Selected Metric" TypeName="SelectedMetric" TypePath="xmcp.xypilot.metrics" Version="1.8">
  <Meta>
    <IsServiceGroupOnly>false</IsServiceGroupOnly>
  </Meta>
  <Data Label="Selected" VariableName="selected">
    <Meta>
      <Type>boolean</Type>
    </Meta>
  </Data>
  <Data Label="Metric" ReferenceName="Metric" ReferencePath="xmcp.xypilot.metrics" VariableName="metric"/>
  <Service Label="Selected Metric" TypeName="SelectedMetric">
    <Operation IsStatic="true" Label="Get Metric Instances" Name="getMetricInstances" RequiresXynaOrder="true">
      <Input/>
      <Output>
        <Data ID="70" IsList="true" Label="Metric" ReferenceName="Metric" ReferencePath="xmcp.xypilot.metrics" VariableName="metric70"/>
      </Output>
      <SourceCode>
        <CodeSnippet Type="Java">long revision = correlatedXynaOrder.getRevision();
try {
    com.gip.xyna.xprc.xfractwfe.generation.DOM dom = com.gip.xyna.xprc.xfractwfe.generation.DOM.getInstance(Metric.class.getName(), revision);
    java.util.Set&lt;com.gip.xyna.xprc.xfractwfe.generation.GenerationBase&gt; subTypes = dom.getSubTypes(new com.gip.xyna.xprc.xfractwfe.generation.GenerationBaseCache());
    java.util.Map&lt;String, Metric&gt; metricsByFQN = new java.util.HashMap&lt;&gt;(); // use a map to avoid duplicate subtypes with the same FQN
    for (com.gip.xyna.xprc.xfractwfe.generation.GenerationBase subType : subTypes) {
        try {
            com.gip.xyna.xdev.xfractmod.xmdm.GeneralXynaObject instance = com.gip.xyna.xdev.xfractmod.xmdm.XynaObject.instantiate(subType.getFqClassName(), true, revision);
            metricsByFQN.put(subType.getFqClassName(), (Metric) instance);
        } catch (Exception e) {
        }
    }
    return new java.util.ArrayList&lt;&gt;(metricsByFQN.values());
} catch (Exception e) {
    throw new RuntimeException(e);
}</CodeSnippet>
      </SourceCode>
    </Operation>
  </Service>
</DataType>
