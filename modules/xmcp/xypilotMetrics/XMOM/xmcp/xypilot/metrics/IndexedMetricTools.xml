<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * Copyright 2025 Xyna GmbH, Germany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
--><DataType xmlns="http://www.gip.com/xyna/xdev/xfractmod" IsAbstract="false" Label="Indexed Metric Tools" TypeName="IndexedMetricTools" TypePath="xmcp.xypilot.metrics" Version="1.8">
  <Meta>
    <IsServiceGroupOnly>true</IsServiceGroupOnly>
  </Meta>
  <Service Label="Indexed Metric Tools" TypeName="IndexedMetricTools">
    <Operation IsStatic="true" Label="Sort and Adapt to Indexed Metric List" Name="sortAndAdaptToIndexedMetricList">
      <Input>
        <Data ID="8947" IsList="true" Label="Selected Metric" ReferenceName="SelectedMetric" ReferencePath="xmcp.xypilot.metrics" VariableName="selectedMetric8947"/>
      </Input>
      <Output>
        <Data ID="8948" IsList="true" Label="Indexed Metric" ReferenceName="IndexedMetric" ReferencePath="xmcp.xypilot.metrics" VariableName="indexedMetric8948"/>
      </Output>
      <SourceCode>
        <CodeSnippet Type="Java">java.util.List&lt;IndexedMetric&gt; ret = new java.util.ArrayList&lt;&gt;();
java.util.Map&lt;String, SelectedMetric&gt; map = new java.util.TreeMap&lt;&gt;();
java.util.List&lt;String&gt; names = new java.util.ArrayList&lt;&gt;();
for (SelectedMetric sm : selectedMetric8947) {
  if (sm == null) { continue; }
  if (sm.getMetric() == null) { continue; }
  String name = sm.getMetric().getClass().getName();
  sm.getMetric().init();
  map.put(name, sm);
  names.add(name);
}
java.util.Collections.sort(names);
int i = 0;
for (String name : names) {
  SelectedMetric sm = map.get(name);
  IndexedMetric im = new IndexedMetric();
  im.setMetric(sm);
  im.setIndex(i);
  i++;
  ret.add(im);
}
return ret;</CodeSnippet>
      </SourceCode>
    </Operation>
  </Service>
</DataType>
