<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * Copyright 2024 Xyna GmbH, Germany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 --><DataType xmlns="http://www.gip.com/xyna/xdev/xfractmod" IsAbstract="true" Label="Metric" TypeName="Metric" TypePath="xmcp.xypilot.metrics" Version="1.8">
  <Meta>
    <IsServiceGroupOnly>false</IsServiceGroupOnly>
    <Documentation>A metric performs some kind of static code analysis to compute a score indicating the quality of the code according to the metrics heuristic.
This is the base class of all metrics. See xmcp.xypilot.metrics.defaults for some examples.</Documentation>
  </Meta>
  <Data Label="Name" VariableName="name">
    <Meta>
      <Type>String</Type>
    </Meta>
  </Data>
  <Data Label="Description" VariableName="description">
    <Meta>
      <Type>String</Type>
    </Meta>
  </Data>
  <Service Label="Metric" TypeName="Metric">
    <Operation IsAbstract="true" IsStatic="false" Label="Init" Name="init">
      <Input/>
      <Output/>
      <Meta>
        <Documentation>This method is called once before any score functions are called. It should set the name and description of the metric.</Documentation>
      </Meta>
    </Operation>
    <Operation IsAbstract="true" IsStatic="false" Label="Compute Score" Name="computeScore">
      <Input>
        <Data ID="43" Label="Code" ReferenceName="Code" ReferencePath="xmcp.xypilot.metrics" VariableName="code43"/>
      </Input>
      <Output>
        <Data ID="144" Label="Score" ReferenceName="Score" ReferencePath="xmcp.xypilot.metrics" VariableName="score144"/>
      </Output>
      <Meta>
        <Documentation>Evaluates the metric on the specified code. 
Returns a score indicating the quality of the code according to this metric.
The score can have any value and meaning, there are no range restrictions, and a high score does not necessarily mean high quality.
See: Normalize Scores</Documentation>
      </Meta>
    </Operation>
    <Operation IsStatic="true" Label="Get Metric Instances" Name="getMetricInstances" RequiresXynaOrder="true">
      <Input/>
      <Output>
        <Data ID="70" IsList="true" Label="Metric" ReferenceName="Metric" ReferencePath="xmcp.xypilot.metrics" VariableName="metric70"/>
      </Output>
      <SourceCode>
        <CodeSnippet Type="Java">long revision = correlatedXynaOrder.getRevision();
try {
    com.gip.xyna.xprc.xfractwfe.generation.DOM dom = com.gip.xyna.xprc.xfractwfe.generation.DOM.getInstance(Metric.class.getName(), revision);
    java.util.Set&lt;com.gip.xyna.xprc.xfractwfe.generation.GenerationBase&gt; subTypes = dom.getSubTypes(new com.gip.xyna.xprc.xfractwfe.generation.GenerationBaseCache());
    java.util.Map&lt;String, Metric&gt; metricsByFQN = new java.util.HashMap&lt;&gt;(); // use a map to avoid duplicate subtypes with the same FQN
    for (com.gip.xyna.xprc.xfractwfe.generation.GenerationBase subType : subTypes) {
        try {
            com.gip.xyna.xdev.xfractmod.xmdm.GeneralXynaObject instance = com.gip.xyna.xdev.xfractmod.xmdm.XynaObject.instantiate(subType.getFqClassName(), true, revision);
            metricsByFQN.put(subType.getFqClassName(), (Metric) instance);
        } catch (Exception e) {
        }
    }
    return new java.util.ArrayList&lt;&gt;(metricsByFQN.values());
} catch (Exception e) {
    throw new RuntimeException(e);
}</CodeSnippet>
      </SourceCode>
    </Operation>
    <Operation IsAbstract="true" IsStatic="false" Label="Normalize Scores" Name="normalizeScores">
      <Input>
        <Data ID="101" IsList="true" Label="Score" ReferenceName="Score" ReferencePath="xmcp.xypilot.metrics" VariableName="score101"/>
      </Input>
      <Output>
        <Data ID="151" IsList="true" Label="Score" ReferenceName="Score" ReferencePath="xmcp.xypilot.metrics" VariableName="score151"/>
      </Output>
      <Meta>
        <Documentation>Normalizes each score in the specified list to the range [0,1], where 0 corresponds to the lowest and 1 to the highest possible quality, respectively. 
See xmcp.xypilot.metrics.NormalizationFunctions for some predefined functions to normalize scores.</Documentation>
      </Meta>
    </Operation>
  </Service>
</DataType>
