{
  "meta": {
    "Test Reference": "Open", 
    "created": "2.3.2021", 
    "updated": "2.3.2021"
  }, 
  "operations": [
    {
      "data": [
        {
          "!GuiHttp%252F!": "GuiHttp%252F"
        }, 
        {
          "!xmcp.factorymanager.orderinputsources.GetOrderIn!": "xmcp.factorymanager.orderinputsources.GetOrderInputSources"
        }, 
        {
          "!asc!": "asc"
        }, 
        {
          "!Name!": "Name"
        }, 
        {
          "!xmcp.tables.datatypes.TableColumn!": "xmcp.tables.datatypes.TableColumn"
        }, 
        {
          "!name!": "name"
        }, 
        {
          "!Application!": "Application"
        }, 
        {
          "!applicationName!": "applicationName"
        }, 
        {
          "!Version!": "Version"
        }, 
        {
          "!versionName!": "versionName"
        }, 
        {
          "!Workspace!": "Workspace"
        }, 
        {
          "!workspaceName!": "workspaceName"
        }, 
        {
          "!Source_Type!": "Source Type"
        }, 
        {
          "!sourceType.label!": "sourceType.label"
        }, 
        {
          "!Order_Type!": "Order Type"
        }, 
        {
          "!orderType.type!": "orderType.type"
        }, 
        {
          "!Worksteps_using_Sources!": "Worksteps using Sources"
        }, 
        {
          "!referencedInputSourceCount!": "referencedInputSourceCount"
        }, 
        {
          "!State!": "State"
        }, 
        {
          "!state!": "state"
        }, 
        {
          "!stateList!": [{"state": "OK"}, {"state": "INVALID"}]
        },
        {
          "!xmcp.tables.datatypes.TableInfo!": "xmcp.tables.datatypes.TableInfo"
        }, 
        {
          "!ZetaFramework!": "ZetaFramework"
        } 
      ], 
      "operation": "multiSet"
    }, 
    {
      "operation": "call", 
      "payload": {
        "async": false, 
        "input": [
          {
            "$meta": {
              "fqn": "!xmcp.tables.datatypes.TableInfo!", 
              "rtc": {
                "application": "!ZetaFramework!" 
              }
            }, 
            "bootstrap": false, 
            "columns": {
              "$list": [
                {
                  "$meta": {
                    "fqn": "!xmcp.tables.datatypes.TableColumn!"
                  }, 
                  "break0": false, 
                  "disableFilter": false, 
                  "disableSort": false, 
                  "name": "!Name!", 
                  "path": "!name!", 
                  "pre": false, 
                  "shrink": false, 
                  "sort": "!asc!"
                }, 
                {
                  "$meta": {
                    "fqn": "!xmcp.tables.datatypes.TableColumn!"
                  }, 
                  "break0": false, 
                  "disableFilter": false, 
                  "disableSort": false, 
                  "name": "!Application!", 
                  "path": "!applicationName!", 
                  "pre": false, 
                  "shrink": false
                }, 
                {
                  "$meta": {
                    "fqn": "!xmcp.tables.datatypes.TableColumn!"
                  }, 
                  "break0": false, 
                  "disableFilter": false, 
                  "disableSort": false, 
                  "name": "!Version!", 
                  "path": "!versionName!", 
                  "pre": false, 
                  "shrink": false
                }, 
                {
                  "$meta": {
                    "fqn": "!xmcp.tables.datatypes.TableColumn!"
                  }, 
                  "break0": false, 
                  "disableFilter": false, 
                  "disableSort": false, 
                  "name": "!Workspace!", 
                  "path": "!workspaceName!", 
                  "pre": false, 
                  "shrink": false
                }, 
                {
                  "$meta": {
                    "fqn": "!xmcp.tables.datatypes.TableColumn!"
                  }, 
                  "break0": false, 
                  "disableFilter": false, 
                  "disableSort": false, 
                  "name": "!Source_Type!", 
                  "path": "!sourceType.label!", 
                  "pre": false, 
                  "shrink": false
                }, 
                {
                  "$meta": {
                    "fqn": "!xmcp.tables.datatypes.TableColumn!"
                  }, 
                  "break0": false, 
                  "disableFilter": false, 
                  "disableSort": false, 
                  "name": "!Order_Type!", 
                  "path": "!orderType.type!", 
                  "pre": false, 
                  "shrink": false
                }, 
                {
                  "$meta": {
                    "fqn": "!xmcp.tables.datatypes.TableColumn!"
                  }, 
                  "break0": false, 
                  "disableFilter": false, 
                  "disableSort": false, 
                  "name": "!Worksteps_using_Sources!", 
                  "path": "!referencedInputSourceCount!", 
                  "pre": false, 
                  "shrink": false
                }, 
                {
                  "$meta": {
                    "fqn": "!xmcp.tables.datatypes.TableColumn!"
                  }, 
                  "break0": false, 
                  "disableFilter": false, 
                  "disableSort": false, 
                  "name": "!State!", 
                  "path": "!state!", 
                  "pre": false, 
                  "shrink": false,
				  "sort": "asc"
                }
              ], 
              "$meta": {
                "fqn": "!xmcp.tables.datatypes.TableColumn!"
              }
            }, 
            "filterCaseSensitive": false 
          }
        ], 
        "orderType": "!xmcp.factorymanager.orderinputsources.GetOrderIn!"
      }, 
      "requestType": "POST", 
      "url": "/runtimeContext/!GuiHttp%252F!/startorder"
    },
    {
      "operation": "read",
      "targetVariable": "!stateFirst!",
      "pathInResponse": "output[1]/$list[0]/state",
      "unquoteResult": false
    },
    {
      "operation": "read",
      "targetVariable": "!stateLast!",
      "pathInResponse": "output[1]/$list[last]/state",
      "unquoteResult": false
    },
    {
      "operation": "assert",
      "constraint": "isInList",
      "variable": "!stateList!",
	  "entries": [
        {
          "state": "!stateFirst!"
        }
      ]
    },
    {
      "operation": "assert",
      "constraint": "isInList",
      "variable": "!stateList!",
	  "entries": [
        {
          "state": "!stateLast!"
        }
      ]
    }
  ]
}