<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * Copyright 2025 Xyna GmbH, Germany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
--><DataType xmlns="http://www.gip.com/xyna/xdev/xfractmod" BaseTypeName="OASBaseType" BaseTypePath="xmcp.oas.datatype" IsAbstract="false" Label="Quantity" TypeName="Quantity" TypePath="internalized.tmf633.datamodel" Version="1.8">
  <Meta>
    <IsServiceGroupOnly>false</IsServiceGroupOnly>
    <Documentation>An amount in a given unit
        </Documentation>
  </Meta>
  <Data Label="amount" VariableName="amount">
    <Meta>
      <Type>Double</Type>
      <Documentation>Numeric value in a given unit
format: float
        </Documentation>
    </Meta>
  </Data>
  <Data Label="units" VariableName="units">
    <Meta>
      <Type>String</Type>
      <Documentation>Unit
        </Documentation>
    </Meta>
  </Data>
  <Service Label="Quantity" TypeName="Quantity">
    <Operation IsStatic="false" Label="Validate" Name="validate">
      <Input/>
      <Output>
        <Data ID="1" Label="OAS Validation Result" ReferenceName="OASValidationResult" ReferencePath="xmcp.oas.datatype" VariableName="oASValidationResult1"/>
      </Output>
      <SourceCode>
        <CodeSnippet Type="Java">
xmcp.oas.datatype.OASValidationResult result = new xmcp.oas.datatype.OASValidationResult();
result.setErrorMessages(new ArrayList&lt;String&gt;());
// validate Quantity.amount of type Double
try {
    var validator_amount = new com.gip.xyna.openapi.NumberTypeValidator&lt;Double&gt;();
    validator_amount.setName("amount");
    validator_amount.setValue(getAmount());
    validator_amount.setFormat("float");
    result.getErrorMessages().addAll(validator_amount.checkValid());
} catch (Exception e) {
    result.getErrorMessages().add("Error: could not validate Quantity.amount");
}

// validate Quantity.units of type String
try {
    var validator_units = new com.gip.xyna.openapi.StringTypeValidator();
    validator_units.setName("units");
    validator_units.setValue(getUnits());
    result.getErrorMessages().addAll(validator_units.checkValid());
} catch (Exception e) {
    result.getErrorMessages().add("Error: could not validate Quantity.units");
}

return result.getResult();
                </CodeSnippet>
      </SourceCode>
    </Operation>
  </Service>
</DataType>
