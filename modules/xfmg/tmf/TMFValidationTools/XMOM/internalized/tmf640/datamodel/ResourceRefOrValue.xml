<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * Copyright 2025 Xyna GmbH, Germany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
--><DataType xmlns="http://www.gip.com/xyna/xdev/xfractmod" BaseTypeName="OASBaseType" BaseTypePath="xmcp.oas.datatype" IsAbstract="false" Label="ResourceRefOrValue" TypeName="ResourceRefOrValue" TypePath="internalized.tmf640.datamodel" Version="1.8">
  <Meta>
    <IsServiceGroupOnly>false</IsServiceGroupOnly>
    <Documentation>A Resource to be created defined by value or existing defined by reference. The polymorphic attributes @type, @schemaLocation &amp; @referredType are related to the Service entity and not the RelatedServiceRefOrValue class itself
This data type is "oneOf": Resource, ResourceRef
This is an Orwrapper!
        </Documentation>
  </Meta>
  <Data Label="Resource" ReferenceName="Resource" ReferencePath="internalized.tmf640.datamodel" VariableName="resource">
    <Meta>
      <Documentation/>
    </Meta>
  </Data>
  <Data Label="ResourceRef" ReferenceName="ResourceRef" ReferencePath="internalized.tmf640.datamodel" VariableName="resourceRef">
    <Meta>
      <Documentation/>
    </Meta>
  </Data>
  <Data Label="@type" VariableName="attype">
    <Meta>
      <Type>String</Type>
      <Documentation>When sub-classing, this defines the sub-class Extensible name
        </Documentation>
    </Meta>
  </Data>
  <Service Label="ResourceRefOrValue" TypeName="ResourceRefOrValue">
    <Operation IsStatic="false" Label="Validate" Name="validate">
      <Input/>
      <Output>
        <Data ID="1" Label="OAS Validation Result" ReferenceName="OASValidationResult" ReferencePath="xmcp.oas.datatype" VariableName="oASValidationResult1"/>
      </Output>
      <SourceCode>
        <CodeSnippet Type="Java">
xmcp.oas.datatype.OASValidationResult result = new xmcp.oas.datatype.OASValidationResult();
result.setErrorMessages(new ArrayList&lt;String&gt;());
// validate ResourceRefOrValue.resource of type Resource
try {
    internalized.tmf640.datamodel.Resource resource = getResource();
    if (resource != null) {
        result.getErrorMessages().addAll(resource.validate().getErrorMessages());
    }
} catch (Exception e) {
    result.getErrorMessages().add("Error: could not validate ResourceRefOrValue.resource");
}

// validate ResourceRefOrValue.resourceRef of type ResourceRef
try {
    internalized.tmf640.datamodel.ResourceRef resourceRef = getResourceRef();
    if (resourceRef != null) {
        result.getErrorMessages().addAll(resourceRef.validate().getErrorMessages());
    }
} catch (Exception e) {
    result.getErrorMessages().add("Error: could not validate ResourceRefOrValue.resourceRef");
}

// validate ResourceRefOrValue.attype of type String
try {
    var validator_attype = new com.gip.xyna.openapi.StringTypeValidator();
    validator_attype.setName("@type");
    validator_attype.setValue(getAttype());
    result.getErrorMessages().addAll(validator_attype.checkValid());
} catch (Exception e) {
    result.getErrorMessages().add("Error: could not validate ResourceRefOrValue.attype");
}

return result.getResult();
                </CodeSnippet>
      </SourceCode>
    </Operation>
  </Service>
</DataType>
