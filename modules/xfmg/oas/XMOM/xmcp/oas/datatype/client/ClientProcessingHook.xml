<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * Copyright 2024 Xyna GmbH, Germany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
--><DataType xmlns="http://www.gip.com/xyna/xdev/xfractmod" IsAbstract="false" Label="Client Processing Hook" TypeName="ClientProcessingHook" TypePath="xmcp.oas.datatype.client" Version="1.8">
  <Meta>
    <IsServiceGroupOnly>false</IsServiceGroupOnly>
  </Meta>
  <Service Label="Client Processing Hook" TypeName="ClientProcessingHook">
    <Operation IsStatic="false" Label="Preprocess Request" Name="preprocessRequest">
      <Input>
        <Data ID="10" Label="Send Parameter" ReferenceName="SendParameter" ReferencePath="xact.http" VariableName="sendParameter10"/>
      </Input>
      <Output>
        <Data ID="14" Label="Send Parameter" ReferenceName="SendParameter" ReferencePath="xact.http" VariableName="sendParameter14"/>
      </Output>
      <Throws>
        <Exception ID="45" Label="Client Processing Hook Exception" ReferenceName="ClientProcessingHookException" ReferencePath="xmcp.oas.exception" VariableName="clientProcessingHookException45"/>
      </Throws>
      <Meta>
        <Documentation>Hook to preprocess send parameter.</Documentation>
      </Meta>
      <SourceCode>
        <CodeSnippet Type="Java">return sendParameter10;</CodeSnippet>
      </SourceCode>
    </Operation>
    <Operation IsStatic="false" Label="Postprocess Response" Name="postprocessResponse">
      <Input>
        <Data ID="19" Label="Header" ReferenceName="Header" ReferencePath="xact.http" VariableName="header19"/>
        <Data ID="26" Label="HTTP Status Code" ReferenceName="HTTPStatusCode" ReferencePath="xact.http.enums.statuscode" VariableName="hTTPStatusCode26"/>
        <Data ID="32" Label="Document" ReferenceName="Document" ReferencePath="xact.templates" VariableName="document32"/>
      </Input>
      <Output>
        <Data ID="23" Label="Header" ReferenceName="Header" ReferencePath="xact.http" VariableName="header23"/>
        <Data ID="29" Label="HTTP Status Code" ReferenceName="HTTPStatusCode" ReferencePath="xact.http.enums.statuscode" VariableName="hTTPStatusCode29"/>
        <Data ID="36" Label="Document" ReferenceName="Document" ReferencePath="xact.templates" VariableName="document36"/>
      </Output>
      <Throws>
        <Exception ID="41" Label="Client Processing Hook Exception" ReferenceName="ClientProcessingHookException" ReferencePath="xmcp.oas.exception" VariableName="clientProcessingHookException41"/>
      </Throws>
      <Meta>
        <Documentation>Hook to postprocess response before it is parsed.</Documentation>
      </Meta>
      <SourceCode>
        <CodeSnippet Type="Java">return new Container(header19, hTTPStatusCode26, document32);</CodeSnippet>
      </SourceCode>
    </Operation>
    <Operation IsStatic="false" Label="Validate Send Parameter" Name="validateSendParameter">
      <Input>
        <Data ID="78" Label="OAS Base Type" ReferenceName="OASBaseType" ReferencePath="xmcp.oas.datatype" VariableName="oASBaseType78"/>
      </Input>
      <Output>
        <Data ID="68" Label="Validate" ReferenceName="Validate" ReferencePath="xmcp.oas.datatype" VariableName="validate68"/>
      </Output>
      <SourceCode>
        <CodeSnippet Type="Java">com.gip.xyna.xfmg.xods.configuration.XynaPropertyUtils.XynaPropertyWithDefaultValue property;
property = com.gip.xyna.XynaFactory.getInstance().getFactoryManagement().
    getPropertyWithDefaultValue("xmcp.oas.validation.default");
String validate = property != null ? property.getValueOrDefValue() : "true";
validate = validate != null ? validate : "true";
return new Validate.Builder().validate(validate.equalsIgnoreCase("true")).instance();</CodeSnippet>
      </SourceCode>
    </Operation>
    <Operation IsStatic="false" Label="Validate Response" Name="validateResponse">
      <Input>
        <Data ID="83" Label="OAS Base Type" ReferenceName="OASBaseType" ReferencePath="xmcp.oas.datatype" VariableName="oASBaseType83"/>
      </Input>
      <Output>
        <Data ID="89" Label="Validate" ReferenceName="Validate" ReferencePath="xmcp.oas.datatype" VariableName="validate89"/>
      </Output>
      <SourceCode>
        <CodeSnippet Type="Java">com.gip.xyna.xfmg.xods.configuration.XynaPropertyUtils.XynaPropertyWithDefaultValue property;
property = com.gip.xyna.XynaFactory.getInstance().getFactoryManagement().
    getPropertyWithDefaultValue("xmcp.oas.validation.default");
String validate = property != null ? property.getValueOrDefValue() : "true";
validate = validate != null ? validate : "true";
return new Validate.Builder().validate(validate.equalsIgnoreCase("true")).instance();</CodeSnippet>
      </SourceCode>
    </Operation>
  </Service>
</DataType>
