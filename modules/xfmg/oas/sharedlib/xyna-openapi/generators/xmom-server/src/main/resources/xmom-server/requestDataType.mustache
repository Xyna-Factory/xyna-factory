{{!
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * Copyright 2024 Xyna GmbH, Germany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
}}
{{#operations}}{{#xynaOperation}}<DataType xmlns="http://www.gip.com/xyna/xdev/xfractmod" Version="1.8" IsAbstract="false"
TypeName="{{parameterRefName}}" TypePath="{{parameterRefPath}}" Label="{{parameterLabel}}"
BaseTypeName="RequestParameter" BaseTypePath="xmcp.oas.datatype.provider">
  <Meta>
    <IsServiceGroupOnly>false</IsServiceGroupOnly>
    <Documentation></Documentation>
  </Meta>{{#allParams}}
    <Data Label="{{paramLabel}}" VariableName="{{paramVarName}}" {{#isList}}IsList="true"{{/isList}}{{^isPrimitive}}
     ReferenceName="{{paramRefName}}" ReferencePath="{{paramRefPath}}"{{/isPrimitive}}>
        <Meta>{{#isPrimitive}}
            <Type>{{datatype}}</Type>{{/isPrimitive}}
            <Documentation>{{description}}</Documentation>
        </Meta>
    </Data>{{/allParams}}
  <Service Label="{{parameterLabel}}" TypeName="{{parameterRefName}}">
    <Operation Label="Validate" Name="validate" IsStatic="false">
      <Input>
      </Input>
      <Output>
        <Data ID="3" Label="OASValidationResult" VariableName="oASValidationResult3" ReferenceName="OASValidationResult" ReferencePath="xmcp.oas.datatype"/>
      </Output>
      <SourceCode>
        <CodeSnippet Type="Java">xmcp.oas.datatype.OASValidationResult result = new xmcp.oas.datatype.OASValidationResult();
result.setErrorMessages(new ArrayList&lt;String&gt;());

{{#allParams}}{{>validation}}{{/allParams}}
return result.getResult();
</CodeSnippet>
      </SourceCode>
    </Operation>
    <Operation Label="parse Parameter" Name="parseParameter" IsStatic="false">
      <Input>
        <Data ID="1" Label="Http Request" VariableName="httpRequest1" ReferenceName="HttpRequest" ReferencePath="xmcp.oas.datatype"/>
      </Input>
      <Output>
        <Data ID="2" Label="{{parameterLabel}}" VariableName="{{parameterVarName}}2"
        ReferenceName="{{parameterRefName}}" ReferencePath="{{parameterRefPath}}"/>
      </Output>
      <SourceCode>
        <CodeSnippet Type="Java">{{parameterRefName}} ret = new {{parameterRefName}}();

for (xmcp.oas.datatype.URLPathParameter pathPara: httpRequest1.getURLPathParameter()) { {{!
}}{{#allParams}}{{#isPathParam}}
    if (pathPara.getAttribute().equals("{{paramLabel}}")) {
        ret.{{setParamVarName}}({{dataType}}.valueOf(pathPara.getValue()));
    }{{/isPathParam}}{{/allParams}}{{!
}}}
for (xact.http.URLPathQuery query: httpRequest1.getURLQueries()) { {{!
}}{{#allParams}}{{#isQueryParam}}
    if (query.getAttribute().equals("{{paramLabel}}")) {
        ret.{{setParamVarName}}({{dataType}}.valueOf(query.getValue()));
    }{{/isQueryParam}}{{/allParams}}{{!
}}}
for (xact.http.HeaderField headerField: httpRequest1.getHeader().getHeaderField()) { {{!
}}{{#allParams}}{{#isHeaderParam}}
    if (headerField.getName().equals("{{paramLabel}}")) {
        ret.{{setParamVarName}}({{dataType}}.valueOf(headerField.getValue()));
    }{{/isHeaderParam}}{{/allParams}}{{!
}}}{{#hasBody}}
xfmg.xfctrl.datamodel.json.parameter.JSONParsingOptions jsonOptions = new xfmg.xfctrl.datamodel.json.parameter.JSONParsingOptions();
jsonOptions.setListToMapTransformation(new ArrayList&lt;xfmg.xfctrl.datamodel.json.parameter.ListToMapTransformation&gt;());
jsonOptions.setMemberSubstitution(new ArrayList&lt;xfmg.xfctrl.datamodel.json.parameter.MemberSubstitution&gt;());
jsonOptions.setUseLabels(true);{{#allParams}}{{#isBodyParam}}{{^isPrimitive}}
jsonOptions.setObjectDecider(new {{apiRefPath}}.decider.OASDecider());
xact.templates.Document body = httpRequest1.getBody();
{{paramRefName}} {{paramVarName}} = ({{paramRefName}})xfmg.xfctrl.datamodel.json.JSONDatamodelServices.parseObjectFromJSONWithOptions(body, new {{paramRefName}}(), jsonOptions);
ret.{{setParamVarName}}({{paramVarName}});
{{/isPrimitive}}{{/isBodyParam}}{{/allParams}}{{/hasBody}}
return ret;</CodeSnippet>
      </SourceCode>
    </Operation>
  </Service>
</DataType>
{{/xynaOperation}}{{/operations}}