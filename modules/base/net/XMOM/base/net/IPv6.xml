<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * Copyright 2022 Xyna GmbH, Germany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-->
<DataType xmlns="http://www.gip.com/xyna/xdev/xfractmod" Label="IPv6" TypeName="IPv6" TypePath="base.net" Version="1.8">
  <Meta>
    <IsServiceGroupOnly>false</IsServiceGroupOnly>
  </Meta>
  <Data Label="Address" VariableName="address">
    <Meta>
      <Type>String</Type>
    </Meta>
  </Data>
  <Service Label="IPv 6" TypeName="IPv6">
    
    <Operation IsStatic="false" Label="Convert to IPv4" Name="convertToIPv4">
      <Input/>
      <Output>
        <Data Label="IPv 4" ReferenceName="IPv4" ReferencePath="base.net" VariableName="iPv4"/>
      </Output>
      <Throws>
        <Exception Label="Format Exception" ReferenceName="FormatException" ReferencePath="base.net.exception" VariableName="formatException"/>
        <Exception Label="Validation Exception" ReferenceName="ValidationException" ReferencePath="base.net.exception" VariableName="validationException"/>
      </Throws>
      <SourceCode>
        <CodeSnippet Type="Java">return null;</CodeSnippet>
      </SourceCode>
    </Operation>

    <Operation IsStatic="false" Label="To Full Hex Representation" Name="toFullHexRepresentation">
      <Input></Input>
      <Output>
        <Data Label="Value" VariableName="value">
          <Meta>
            <Type>String</Type>
          </Meta>
        </Data>
      </Output>
      <Throws>
        <Exception Label="Format Exception" ReferenceName="FormatException" ReferencePath="base.net.exception" VariableName="formatException"/>
        <Exception Label="Validation Exception" ReferenceName="ValidationException" ReferencePath="base.net.exception" VariableName="validationException"/>
      </Throws>
      <SourceCode>
        <CodeSnippet Type="Java">return null;</CodeSnippet>
      </SourceCode>
    </Operation>

    <Operation IsStatic="false" Label="To Short Hex Representation" Name="toShortHexRepresentation">
      <Input></Input>
      <Output>
        <Data Label="Value" VariableName="value">
          <Meta>
            <Type>String</Type>
          </Meta>
        </Data>
      </Output>
      <Throws>
        <Exception Label="Format Exception" ReferenceName="FormatException" ReferencePath="base.net.exception" VariableName="formatException"/>
        <Exception Label="Validation Exception" ReferenceName="ValidationException" ReferencePath="base.net.exception" VariableName="validationException"/>
      </Throws>
      <SourceCode>
        <CodeSnippet Type="Java">return null;</CodeSnippet>
      </SourceCode>
    </Operation>

    <Operation IsStatic="false" Label="Is Link Local" Name="isLinkLocal">
      <Input></Input>
      <Output>
        <Data Label="Flag" VariableName="Flag">
          <Meta>
            <Type>boolean</Type>
          </Meta>
        </Data>
      </Output>
      <Throws>
        <Exception Label="Format Exception" ReferenceName="FormatException" ReferencePath="base.net.exception" VariableName="formatException"/>
        <Exception Label="Validation Exception" ReferenceName="ValidationException" ReferencePath="base.net.exception" VariableName="validationException"/>
      </Throws>
      <SourceCode>
        <CodeSnippet Type="Java">return false;</CodeSnippet>
      </SourceCode>
    </Operation>

    <Operation IsStatic="false" Label="Is Multicast" Name="isMulticast">
      <Input></Input>
      <Output>
        <Data Label="Flag" VariableName="Flag">
          <Meta>
            <Type>boolean</Type>
          </Meta>
        </Data>
      </Output>
      <Throws>
        <Exception Label="Format Exception" ReferenceName="FormatException" ReferencePath="base.net.exception" VariableName="formatException"/>
        <Exception Label="Validation Exception" ReferenceName="ValidationException" ReferencePath="base.net.exception" VariableName="validationException"/>
      </Throws>
      <SourceCode>
        <CodeSnippet Type="Java">return false;</CodeSnippet>
      </SourceCode>
    </Operation>

    <Operation IsStatic="false" Label="Is Unique Local Unicast" Name="isUniqueLocalUnicast">
      <Input></Input>
      <Output>
        <Data Label="Flag" VariableName="Flag">
          <Meta>
            <Type>boolean</Type>
          </Meta>
        </Data>
      </Output>
      <Throws>
        <Exception Label="Format Exception" ReferenceName="FormatException" ReferencePath="base.net.exception" VariableName="formatException"/>
        <Exception Label="Validation Exception" ReferenceName="ValidationException" ReferencePath="base.net.exception" VariableName="validationException"/>
      </Throws>
      <SourceCode>
        <CodeSnippet Type="Java">return false;</CodeSnippet>
      </SourceCode>
    </Operation>

    <Operation IsStatic="false" Label="Is Unique Local Address" Name="isUniqueLocalAddress">
      <Input></Input>
      <Output>
        <Data Label="Flag" VariableName="Flag">
          <Meta>
            <Type>boolean</Type>
          </Meta>
        </Data>
      </Output>
      <Throws>
        <Exception Label="Format Exception" ReferenceName="FormatException" ReferencePath="base.net.exception" VariableName="formatException"/>
        <Exception Label="Validation Exception" ReferenceName="ValidationException" ReferencePath="base.net.exception" VariableName="validationException"/>
      </Throws>
      <SourceCode>
        <CodeSnippet Type="Java">return false;</CodeSnippet>
      </SourceCode>
    </Operation>

    <Operation IsStatic="false" Label="Is Local Loopback" Name="isLocalLoopback">
      <Input></Input>
      <Output>
        <Data Label="Flag" VariableName="Flag">
          <Meta>
            <Type>boolean</Type>
          </Meta>
        </Data>
      </Output>
      <Throws>
        <Exception Label="Format Exception" ReferenceName="FormatException" ReferencePath="base.net.exception" VariableName="formatException"/>
        <Exception Label="Validation Exception" ReferenceName="ValidationException" ReferencePath="base.net.exception" VariableName="validationException"/>
      </Throws>
      <SourceCode>
        <CodeSnippet Type="Java">return false;</CodeSnippet>
      </SourceCode>
    </Operation>

    <Operation IsStatic="false" Label="Is Unspecified Address" Name="isUnspecifiedAddress">
      <Input></Input>
      <Output>
        <Data Label="Flag" VariableName="Flag">
          <Meta>
            <Type>boolean</Type>
          </Meta>
        </Data>
      </Output>
      <Throws>
        <Exception Label="Format Exception" ReferenceName="FormatException" ReferencePath="base.net.exception" VariableName="formatException"/>
        <Exception Label="Validation Exception" ReferenceName="ValidationException" ReferencePath="base.net.exception" VariableName="validationException"/>
      </Throws>
      <SourceCode>
        <CodeSnippet Type="Java">return false;</CodeSnippet>
      </SourceCode>
    </Operation>

    <Operation IsStatic="false" Label="Is 6 To 4 Address" Name="is6To4Address">
      <Input></Input>
      <Output>
        <Data Label="Flag" VariableName="Flag">
          <Meta>
            <Type>boolean</Type>
          </Meta>
        </Data>
      </Output>
      <Throws>
        <Exception Label="Format Exception" ReferenceName="FormatException" ReferencePath="base.net.exception" VariableName="formatException"/>
        <Exception Label="Validation Exception" ReferenceName="ValidationException" ReferencePath="base.net.exception" VariableName="validationException"/>
      </Throws>
      <SourceCode>
        <CodeSnippet Type="Java">return false;</CodeSnippet>
      </SourceCode>
    </Operation>

    <Operation IsStatic="false" Label="Convert To IPv4 Address" Name="convertToIPv4Address">
      <Input></Input>
      <Output>
        <Data Label="IPv4" ReferenceName="IPv4" ReferencePath="base.net" VariableName="iPv4"/>
      </Output>
      <Throws>
        <Exception Label="Format Exception" ReferenceName="FormatException" ReferencePath="base.net.exception" VariableName="formatException"/>
        <Exception Label="Validation Exception" ReferenceName="ValidationException" ReferencePath="base.net.exception" VariableName="validationException"/>
      </Throws>
      <SourceCode>
        <CodeSnippet Type="Java">return null;</CodeSnippet>
      </SourceCode>
    </Operation>

    <Operation IsStatic="false" Label="Is Broadcast Address" Name="isBroadcastAddress">
      <Input>
        <Data Label="Mask" ReferenceName="IPv6Netmask" ReferencePath="base.net" VariableName="mask"/>
      </Input>
      <Output>
        <Data Label="Flag" VariableName="Flag">
          <Meta>
            <Type>boolean</Type>
          </Meta>
        </Data>
      </Output>
      <Throws>
        <Exception Label="Format Exception" ReferenceName="FormatException" ReferencePath="base.net.exception" VariableName="formatException"/>
        <Exception Label="Validation Exception" ReferenceName="ValidationException" ReferencePath="base.net.exception" VariableName="validationException"/>
      </Throws>
      <SourceCode>
        <CodeSnippet Type="Java">return false;</CodeSnippet>
      </SourceCode>
    </Operation>

    <Operation IsStatic="false" Label="Is Network Address" Name="isNetworkAddress">
      <Input>
        <Data Label="Mask" ReferenceName="IPv6Netmask" ReferencePath="base.net" VariableName="mask"/>
      </Input>
      <Output>
        <Data Label="Flag" VariableName="Flag">
          <Meta>
            <Type>boolean</Type>
          </Meta>
        </Data>
      </Output>
      <Throws>
        <Exception Label="Format Exception" ReferenceName="FormatException" ReferencePath="base.net.exception" VariableName="formatException"/>
        <Exception Label="Validation Exception" ReferenceName="ValidationException" ReferencePath="base.net.exception" VariableName="validationException"/>
      </Throws>
      <SourceCode>
        <CodeSnippet Type="Java">return false;</CodeSnippet>
      </SourceCode>
    </Operation>

    <Operation IsStatic="false" Label="Is Gateway Address" Name="isGatewayAddress">
      <Input>
        <Data Label="Mask" ReferenceName="IPv6Netmask" ReferencePath="base.net" VariableName="mask"/>
      </Input>
      <Output>
        <Data Label="Flag" VariableName="Flag">
          <Meta>
            <Type>boolean</Type>
          </Meta>
        </Data>
      </Output>
      <Throws>
        <Exception Label="Format Exception" ReferenceName="FormatException" ReferencePath="base.net.exception" VariableName="formatException"/>
        <Exception Label="Validation Exception" ReferenceName="ValidationException" ReferencePath="base.net.exception" VariableName="validationException"/>
      </Throws>
      <SourceCode>
        <CodeSnippet Type="Java">return false;</CodeSnippet>
      </SourceCode>
    </Operation>

    <Operation IsStatic="false" Label="Get Subsequent IP" Name="getSubsequentIP">
      <Input></Input>
      <Output>
        <Data Label="IPv6" ReferenceName="IPv6" ReferencePath="base.net" VariableName="iPv6"/>
      </Output>
      <Throws>
        <Exception Label="Format Exception" ReferenceName="FormatException" ReferencePath="base.net.exception" VariableName="formatException"/>
        <Exception Label="Validation Exception" ReferenceName="ValidationException" ReferencePath="base.net.exception" VariableName="validationException"/>
      </Throws>
      <SourceCode>
        <CodeSnippet Type="Java">return null;</CodeSnippet>
      </SourceCode>
    </Operation>
    
    <Operation IsStatic="false" Label="Subnet" Name="subnet">
      <Input>
        <Data Label="IPv6 Netmask" ReferenceName="IPv6Netmask" ReferencePath="base.net" VariableName="ipv6Netmask"/>
      </Input>
      <Output>
        <Data Label="IPv6 Subnet" ReferenceName="IPv6Subnet" ReferencePath="base.net" VariableName="iPv6Subnet"/>
      </Output>
      <Throws>
        <Exception Label="Format Exception" ReferenceName="FormatException" ReferencePath="base.net.exception" VariableName="formatException"/>
        <Exception Label="Validation Exception" ReferenceName="ValidationException" ReferencePath="base.net.exception" VariableName="validationException"/>
      </Throws>
      <SourceCode>
        <CodeSnippet Type="Java">return null;</CodeSnippet>
      </SourceCode>
    </Operation>
    
    <Operation IsStatic="false" Label="Get With Offset" Name="getWithOffset">
      <Input>
        <Data Label="IPv6" ReferenceName="IPv6" ReferencePath="base.net" VariableName="iPv6"/>
      </Input>
      <Output>
        <Data Label="IPv6" ReferenceName="IPv6" ReferencePath="base.net" VariableName="iPv6"/>
      </Output>
      <Throws>
        <Exception Label="Format Exception" ReferenceName="FormatException" ReferencePath="base.net.exception" VariableName="formatException"/>
        <Exception Label="Validation Exception" ReferenceName="ValidationException" ReferencePath="base.net.exception" VariableName="validationException"/>
      </Throws>
      <SourceCode>
        <CodeSnippet Type="Java">return null;</CodeSnippet>
      </SourceCode>
    </Operation>
    
    <!--
    <Operation IsStatic="false" Label="" Name="">
      <Input></Input>
      <Output>
        <Data Label="Flag" VariableName="Flag">
          <Meta>
            <Type>boolean</Type>
          </Meta>
        </Data>
      </Output>
      <Throws>
        <Exception Label="Format Exception" ReferenceName="FormatException" ReferencePath="base.net.exception" VariableName="formatException"/>
        <Exception Label="Validation Exception" ReferenceName="ValidationException" ReferencePath="base.net.exception" VariableName="validationException"/>
      </Throws>
      <SourceCode>
        <CodeSnippet Type="Java">return false;</CodeSnippet>
      </SourceCode>
    </Operation>
    -->
    
  </Service>
</DataType>
