<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * Copyright 2025 Xyna GmbH, Germany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-->
<DataType xmlns="http://www.gip.com/xyna/xdev/xfractmod" IsAbstract="false" Label="Xmom Field" TypeName="XmomField" TypePath="base.list" Version="1.8">
  <Meta>
    <IsServiceGroupOnly>false</IsServiceGroupOnly>
  </Meta>
  <Data Label="Field" VariableName="field">
    <Meta>
      <Type>String</Type>
    </Meta>
  </Data>
  <Service Label="Xmom Field" TypeName="XmomField">
    <Operation IsStatic="false" Label="Extract As String" Name="extractAsString">
      <Input>
        <Data ID="7" Label="AnyType" ReferenceName="AnyType" ReferencePath="base" VariableName="anyType7">
          <Meta>
            <Type>GeneralXynaObject</Type>
          </Meta>
        </Data>
      </Input>
      <Output>
        <Data ID="4" Label="Value" VariableName="value">
          <Meta>
            <Type>String</Type>
          </Meta>
        </Data>
      </Output>
      <SourceCode>
        <CodeSnippet Type="Java">Object o = extractAsObject(anyType7);
return o == null ? null : String.valueOf(o);
}

private String path;
    public Object extractAsObject(GeneralXynaObject o) {
      if( path == null ) {
        if( field.startsWith("%") ) {
            int idx = field.indexOf('.');
            this.path = field.substring(idx+1);
        } else {
            this.path = field;
        }
      }
      try {
        return o.get(path);
      } catch (NullPointerException e) {
        return null;
      } catch (InvalidObjectPathException e) {
        throw new RuntimeException("Could not access "+path, e);
      }</CodeSnippet>
      </SourceCode>
    </Operation>
  </Service>
</DataType>
