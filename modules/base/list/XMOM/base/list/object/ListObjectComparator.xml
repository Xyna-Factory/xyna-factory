<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * Copyright 2025 Xyna GmbH, Germany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-->
<DataType xmlns="http://www.gip.com/xyna/xdev/xfractmod" BaseTypeName="Comparator" BaseTypePath="base.list.comparator" IsAbstract="false" Label="List Object Comparator" TypeName="ListObjectComparator" TypePath="base.list.object" Version="1.8">
  <Meta>
    <IsServiceGroupOnly>false</IsServiceGroupOnly>
  </Meta>
  <Data IsList="true" Label="Fields" ReferenceName="XmomField" ReferencePath="base.list" VariableName="fields"/>
  <Service Label="List Object Comparator" TypeName="ListObjectComparator">
    <Operation IsStatic="false" Label="Compare" Name="compare">
      <Input>
        <Data ID="2" Label="Any Type 1" ReferenceName="AnyType" ReferencePath="base" VariableName="anytype2">
          <Meta>
            <Type>GeneralXynaObject</Type>
          </Meta>
        </Data>
        <Data ID="3" Label="Any Type 2" ReferenceName="AnyType" ReferencePath="base" VariableName="anytype3">
          <Meta>
            <Type>GeneralXynaObject</Type>
          </Meta>
        </Data>
      </Input>
      <Output>
        <Data ID="4" Label="Result" VariableName="int4">
          <Meta>
            <Type>int</Type>
          </Meta>
        </Data>
      </Output>
      <SourceCode>
        <CodeSnippet Type="Java">if( comparator == null ) {
      comparator = createComparator();
    }
    return comparator.compare(anytype2, anytype3);
}

private transient java.util.Comparator&lt;? super GeneralXynaObject&gt; comparator;


private java.util.Comparator&lt;? super GeneralXynaObject&gt; createComparator() {
     com.gip.xyna.utils.misc.ComparatorUtils.ComparatorList&lt;GeneralXynaObject&gt; comparator = new com.gip.xyna.utils.misc.ComparatorUtils.ComparatorList&lt;&gt;(getFields().size());
     for( XmomField xf :  getFields() ) {
      comparator.add( new base.list.comparator.SimpleComparator.SimplePathComparator(xf)  );
    }
    return com.gip.xyna.utils.misc.ComparatorUtils.nullAware(comparator, false);</CodeSnippet>
      </SourceCode>
    </Operation>
    <Operation IsStatic="false" Label="Generate Index" Name="generateIndex">
      <Input>
        <Data ID="36" Label="AnyType" ReferenceName="AnyType" ReferencePath="base" VariableName="anyType36">
          <Meta>
            <Type>GeneralXynaObject</Type>
          </Meta>
        </Data>
      </Input>
      <Output>
        <Data ID="42" Label="Index" VariableName="index">
          <Meta>
            <Type>String</Type>
          </Meta>
        </Data>
      </Output>
      <SourceCode>
        <CodeSnippet Type="Java">StringBuilder sb = new StringBuilder("\"");
String sep = "";
for( XmomField xf : getFields() ) {
  String s = xf.extractAsString(anyType36) ;
  if( s != null ) {
    sb.append(sep).append(s);
    sep = "/";
  }
}
sb.append("\"");
return sb.toString();</CodeSnippet>
      </SourceCode>
    </Operation>
  </Service>
</DataType>
