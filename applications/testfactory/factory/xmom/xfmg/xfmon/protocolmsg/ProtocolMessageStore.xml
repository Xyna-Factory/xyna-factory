<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * Copyright 2022 Xyna GmbH, Germany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-->
<DataType xmlns="http://www.gip.com/xyna/xdev/xfractmod" Label="Protocol Message Store" TypeName="ProtocolMessageStore" TypePath="xfmg.xfmon.protocolmsg" Version="1.8">
  <Meta>
    <IsServiceGroupOnly>true</IsServiceGroupOnly>
  <IsXynaComponent>true</IsXynaComponent>
  </Meta>
  <Libraries>ProtocolMessageStoreImpl.jar</Libraries>
  <Service Label="Protocol Message Store" TypeName="ProtocolMessageStore">
    <Operation IsStatic="true" Label="create filter criterion on this order hierarchy" Name="createFilterCriterionOnThisOrderHierarchy">
      <Meta>
        <Documentation>Returns a filter criterion (ProtocolMessage) with it's root order id variable set to the root order id of the invoking order.
Throws an exception if OrderContext Mapping has not been enabled for the order.</Documentation>
        <FixedDetailOptions>openDocumentation</FixedDetailOptions>
      </Meta>
      <Input/>
      <Output>
        <Data Label="Filter Criterion" ReferenceName="ProtocolMessage" ReferencePath="xfmg.xfmon.protocolmsg" VariableName="protocolMessage"/>
      </Output>
      <Throws>
        <Exception Label="Server Exception" ReferenceName="XynaException" ReferencePath="core.exception" VariableName="xynaException"/>
      </Throws>
      <SourceCode>
        <CodeSnippet Type="Java">return xfmg.xfmon.protocolmsg.ProtocolMessageStoreImpl.createFilterCriterionOnThisOrderHierarchy();</CodeSnippet>
      </SourceCode>
    </Operation>
    <Operation IsStatic="true" Label="retrieve" Name="retrieve">
      <Meta>
        <Documentation>Retrieves stored protocol messages.
Accepts a ProtocolMessage as FilterCriterion. Every non-null member variable of the message (except payload) will be used as an equality filter for the retrieval.</Documentation>
        <FixedDetailOptions>openDocumentation</FixedDetailOptions>
      </Meta>
      <Input>
        <Data Label="Filter Criterion" ReferenceName="ProtocolMessage" ReferencePath="xfmg.xfmon.protocolmsg" VariableName="protocolMessage"/>
        <Data Label="Retrieve Parameter" ReferenceName="RetrieveParameter" ReferencePath="xfmg.xfmon.protocolmsg" VariableName="retrieveParameter"/>
      </Input>
      <Output>
        <Data IsList="true" Label="Protocol Message" ReferenceName="ProtocolMessage" ReferencePath="xfmg.xfmon.protocolmsg" VariableName="protocolMessage6"/>
      </Output>
      <Throws>
        <Exception Label="Server Exception" ReferenceName="XynaException" ReferencePath="core.exception" VariableName="xynaException"/>
      </Throws>
      <SourceCode>
        <CodeSnippet Type="Java">return ProtocolMessageStoreImpl.retrieve(protocolMessage, retrieveParameter);</CodeSnippet>
      </SourceCode>
    </Operation>
    <Operation IsStatic="true" Label="store" Name="store">
      <Meta>
        <Documentation>Stores protocol messages if configured to do so, see XynaProperty xfmg.xfmon.protocolmsg.enablestorage.
Every interaction with the storage (store/retrieve) will once every 30sec discard any messages older then a configurable amount of time (XynaProperty xfmg.xfmon.protocolmsg.messagetimeout).</Documentation>
        <FixedDetailOptions>openDocumentation</FixedDetailOptions>
      </Meta>
      <Input>
        <Data Label="Protocol Message" ReferenceName="ProtocolMessage" ReferencePath="xfmg.xfmon.protocolmsg" VariableName="protocolMessage"/>
        <Data Label="Store Parameter" ReferenceName="StoreParameter" ReferencePath="xfmg.xfmon.protocolmsg" VariableName="storeParameter"/>
      </Input>
      <Output/>
      <Throws>
        <Exception Label="Server Exception" ReferenceName="XynaException" ReferencePath="core.exception" VariableName="xynaException"/>
      </Throws>
      <SourceCode>
        <CodeSnippet Type="Java">ProtocolMessageStoreImpl.store(protocolMessage, storeParameter);</CodeSnippet>
      </SourceCode>
    </Operation>
  </Service>
</DataType>
