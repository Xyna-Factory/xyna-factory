<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * Copyright 2022 Xyna GmbH, Germany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-->
<DataType xmlns="http://www.gip.com/xyna/xdev/xfractmod" Label="synchronization" TypeName="Synchronization" TypePath="xprc.synchronization" Version="1.8">
  <Meta>
    <IsServiceGroupOnly>true</IsServiceGroupOnly>
  <IsXynaComponent>true</IsXynaComponent>
  </Meta>
  <Libraries>SynchronizationImpl.jar</Libraries>
  <Service Label="synchronizationService" TypeName="SynchronizationService">
    <Operation IsStatic="true" Label="notifyWaitingOrder" Name="notifyWaitingOrder" RequiresXynaOrder="true">
      <Meta>
        <SpecialPurpose>SynchronizationNotify</SpecialPurpose>
      </Meta>
      <Input>
        <Data Label="Correlation ID" ReferenceName="CorrelationId" ReferencePath="xprc.synchronization" VariableName="id"/>
        <Data Label="Synchronization Answer" ReferenceName="AnyType" ReferencePath="base" VariableName="incomingAnswer">
          <Restriction>
            <DefaultType>xprc.synchronization.SynchronizationAnswer</DefaultType>
          </Restriction>
        </Data> 
      </Input>
      <Output/>
      <Throws>
        <Exception Label="Server Exception" ReferenceName="XynaException" ReferencePath="core.exception" VariableName="xynaException"/>
        <Exception Label="Duplicate Correlation ID" ReferenceName="DuplicateCorrelationID" ReferencePath="xprc.synchronization" VariableName="duplicateException"/>
      </Throws>
      <SourceCode>
        <CodeSnippet Type="Java">xprc.synchronization.SynchronizationImpl.notifyWaitingOrder(correlatedXynaOrder, id, incomingAnswer, internalXynaStepIdParameter, internalXynaLaneIdParameter);</CodeSnippet>
      </SourceCode>
    </Operation>
    <Operation IsStatic="true" Label="awaitNotification" Name="awaitNotification" RequiresXynaOrder="true">
      <Meta>
        <SpecialPurpose>SynchronizationAwait</SpecialPurpose>
      </Meta>
      <Input>
        <Data Label="Correlation ID" ReferenceName="CorrelationId" ReferencePath="xprc.synchronization" VariableName="id"/>
        <Data Label="Timeout" ReferenceName="Timeout" ReferencePath="xprc.synchronization" VariableName="timeout"/>
      </Input>
      <Output>
        <Data Label="Synchronization Answer" ReferenceName="AnyType" ReferencePath="base" VariableName="answer">
          <Restriction>
            <DefaultType>xprc.synchronization.SynchronizationAnswer</DefaultType>
          </Restriction>
        </Data>
      </Output>
      <Throws>
        <Exception Label="Server Exception" ReferenceName="XynaException" ReferencePath="core.exception" VariableName="xynaException"/>
        <Exception Label="Timeout During Synchronization" ReferenceName="TimeoutDuringSynchronization" ReferencePath="xprc.synchronization" VariableName="timeoutDuringSynchronization"/>
        <Exception Label="Duplicate Correlation ID" ReferenceName="DuplicateCorrelationID" ReferencePath="xprc.synchronization" VariableName="duplicateCorrelationID"/>
      </Throws>
      <SourceCode>
        <CodeSnippet Type="Java">return xprc.synchronization.SynchronizationImpl.awaitNotification(correlatedXynaOrder, id, timeout, internalXynaStepIdParameter, internalXynaFirstWaitingTimeParameter, internalXynaLaneIdParameter);</CodeSnippet>
      </SourceCode>
    </Operation>
    <Operation IsStatic="true" Label="longRunningAwait" Name="longRunningAwait" RequiresXynaOrder="true">
      <Meta>
        <SpecialPurpose>SynchronizationLongRunningAwait</SpecialPurpose>
      </Meta>
      <Input>
        <Data Label="Correlation ID" ReferenceName="CorrelationId" ReferencePath="xprc.synchronization" VariableName="id"/>
        <Data Label="Timeout" ReferenceName="Timeout" ReferencePath="xprc.synchronization" VariableName="timeout"/>
      </Input>
      <Output>
        <Data Label="Synchronization Answer" ReferenceName="AnyType" ReferencePath="base" VariableName="answer">
          <Restriction>
            <DefaultType>xprc.synchronization.SynchronizationAnswer</DefaultType>
          </Restriction>
        </Data>
      </Output>
      <Throws>
        <Exception Label="Server Exception" ReferenceName="XynaException" ReferencePath="core.exception" VariableName="xynaException"/>
        <Exception Label="Duplicate Correlation ID" ReferenceName="DuplicateCorrelationID" ReferencePath="xprc.synchronization" VariableName="duplicateCorrelationID"/>
        <Exception Label="Timeout During Synchronization" ReferenceName="TimeoutDuringSynchronization" ReferencePath="xprc.synchronization" VariableName="timeoutDuringSynchronization"/>
      </Throws>
      <SourceCode>
        <CodeSnippet Type="Java">return xprc.synchronization.SynchronizationImpl.longRunningAwait(correlatedXynaOrder, id, timeout, internalXynaStepIdParameter, internalXynaFirstWaitingTimeParameter, internalXynaLaneIdParameter);</CodeSnippet>
      </SourceCode>
    </Operation>
  </Service>
</DataType>
