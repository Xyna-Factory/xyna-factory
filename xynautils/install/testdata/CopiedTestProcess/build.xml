<?xml version="1.0" encoding="iso-8859-1"?>
<!--
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * Copyright 2022 Xyna GmbH, Germany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-->
<project name="bpel.deploy" default="deploy" basedir=".">
    <!--
      This ant build file was generated by JDev to deploy the BPEL process.
      DONOT EDIT THIS JDEV GENERATED FILE. Any customization should be done
      in default target in user created pre-build.xml or post-build.xml
    -->
    <property name="process.dir" value="${basedir}"/> 
    
    <!-- Set BPEL process name -->
    <xmlproperty file="${process.dir}/bpel/bpel.xml"/>
    <property name="process.name" value="${BPELSuitcase.BPELProcess(id)}"/> 
    
    <property environment="env"/>

    <!-- Set bpel.home from developer prompt's environment variable BPEL_HOME -->
    <condition property="bpel.home" value="${env.BPEL_HOME}">
        <available file="${env.BPEL_HOME}/utilities/ant-orabpel.xml"/>
    </condition>
    <!-- If bpel.home is not yet using env.BPEL_HOME, set it for JDev -->    
    <property name="bpel.home" value="${oracle.home}/integration/bpel"/>

    <!-- First override from build.properties in process.dir, if available -->
    <property file="${process.dir}/build.properties"/> 

    <!-- import custom ant tasks for the BPEL PM -->
    <import file="${bpel.home}/utilities/ant-orabpel.xml"/>
    
    <!-- Use deployment related default properties -->
    <property file="${bpel.home}/utilities/ant-orabpel.properties"/>    
    
    <!--=============================-->
    <!-- default "deploy" target     -->
    <!--=============================-->    
    <target name="deploy" depends="pre-build, process-deploy, post-build" />

    <!--=============================-->
    <!-- Process deployment targets  -->
    <!--=============================-->  
    <target name="process-deploy"
      depends="validateTask, compile, deployProcess, deployTaskForm, deployDecisionServices" />

    <target name="validateTask">
        <echo>
--------------------------------------------------------------
| Validating workflow
--------------------------------------------------------------
        </echo>
        <validateTask dir="${process.dir}/bpel" /> 
    </target>


    <target name="compile">

        <echo>
--------------------------------------------------------------
| Compiling bpel process ${process.name}, revision ${rev}
--------------------------------------------------------------
        </echo>

        <bpelc input="${process.dir}/bpel/bpel.xml" out="${process.dir}/output"
               rev="${rev}"                     home="${bpel.home}"/>
    </target>


    <target name="deployProcess">

        <echo>
--------------------------------------------------------------
| Deploying bpel process ${process.name} on ${http.hostname}, port ${http.port}
--------------------------------------------------------------
        </echo>
        <deployProcess
            user="${admin.user}"   password="${admin.password}"
            domain="${domain}"     process="${process.name}"
            rev="${rev}"           dir="${process.dir}/output"
            hostname="${http.hostname}" httpport="${http.port}"
            verbose="${verbose}"
        />

    </target>


    <target name="deployTaskForm" >
        <echo>
--------------------------------------------------------------
| Deploying workflow form for ${process.name} on ${j2ee.hostname}, port ${http.port}
--------------------------------------------------------------
        </echo>
        <deployTaskForm 
            platform="${platform}" dir="${process.dir}/public_html"
            domain="${domain}"     process="${process.name}" rev="${rev}"
            user="${admin.user}"   password="${admin.password}"
            hostname="${j2ee.hostname}" cluster="${cluster}" 
            rmiport="${rmi.port}"  opmnrequestport="${opmn.requestport}" 
            oc4jinstancename="${oc4jinstancename}"
            asinstancename="${asinstancename}" verbose="${verbose}"
        /> 
    </target>


    <target name="deployDecisionServices" >
        <echo>
--------------------------------------------------------------
| Deploying decision services for ${process.name} on ${j2ee.hostname}, port ${http.port}
--------------------------------------------------------------
        </echo>
        <deployDecisionServices
            platform="${platform}" dir="${process.dir}/decisionservices"
            domain="${domain}"     process="${process.name}" rev="${rev}"
            user="${admin.user}"   password="${admin.password}"
            hostname="${j2ee.hostname}" httpport="${http.port}"
	    cluster="${cluster}"  rmiport="${rmi.port}"  
            opmnrequestport="${opmn.requestport}" oc4jinstancename="${oc4jinstancename}"
            asinstancename="${asinstancename}" verbose="${verbose}"
        /> 
    </target>


    <!--=============================-->
    <!--     BPEL Test targets       -->
    <!--=============================-->
    <target name="test" depends="deployTestSuites, bpelTest, report" /> 
    
    <target name="prepareTests">
        <echo>
--------------------------------------------------------------
| Preparing BPEL tests for deployment
--------------------------------------------------------------
        </echo>
        <delete file="${process.dir}/output/bpeltest.zip" quiet="true"/>

        <zip basedir="${process.dir}/bpel/testsuites" filesonly="true"
            excludes="test_suites.xml, **/excludes/*"
            destfile="${process.dir}/output/bpeltest.zip"/>

    </target>


    <target name="deployTestSuites" depends="prepareTests">
        <echo>
--------------------------------------------------------------
| Deploying bpel tests ${process.name} on ${http.hostname}, port ${http.port}
--------------------------------------------------------------
        </echo>

        <deployTestSuites
            user="${admin.user}"        password="${admin.password}"
            hostname="${http.hostname}" httpport="${http.port}"
            domain="${domain}"          process="${process.name}" 
            rev="${rev}"           testfile="${process.dir}/output/bpeltest.zip"
            verbose="${verbose}"
            />
    </target>
    

    <!-- "bpeltest" target runs deployed testsuites of a BPEL process -->    
    <target name="bpelTest">
        <echo>
--------------------------------------------------------------
| Executing process ${process.name}(v.${rev}): minCoverage=${bpeltest.minCoverage}, timeout=${bpeltest.timeout} sec, numWorkers=${bpeltest.numWorkers}
--------------------------------------------------------------        
        </echo>
        <delete dir="${bpeltest.results.dir}/xml/${process.name}" quiet="true"/>

        <bpeltest
            user="${admin.user}"          password="${admin.password}"
            hostname="${http.hostname}"   httpport="${http.port}"
            domain="${domain}"            process="${process.name}" 
            rev="${rev}"                  name="${process.name}Tests"           
            timeout="${bpeltest.timeout}"
            numWorkers="${bpeltest.numWorkers}" 
            minCoverage="${bpeltest.minCoverage}"
            callHandler="${bpeltest.callHandler}"
            context="${bpel.context.properties}"
            resultsDir="${bpeltest.results.dir}/xml/${process.name}"
            resultsPropertyFile="${bpeltest.results.dir}/${process.name}.properties"
            verbose="${verbose}"
        />
        <property file="${bpeltest.results.dir}/${process.name}.properties"/>
        <echo>
--------------------------------------------------------------
Executed ${test.total.count} test(s) for ${process.name} (v.${rev}) with ${test.failure.count} failure(s)
--------------------------------------------------------------
        </echo>
    </target>


    <!-- "report" target creates JUnitReport for testsuites run by bpeltest. -->
    <target name="report">
        <echo>
--------------------------------------------------------------
Creating BPELTest JUnitReport at ${bpeltest.results.dir}${file.separator}html${file.separator}index.html
--------------------------------------------------------------
        </echo>    
        <mkdir dir="${bpeltest.results.dir}/xml"/>
        <junitreport todir="${bpeltest.results.dir}/xml">
            <fileset dir="${bpeltest.results.dir}/xml">
                <include name="*/TEST-*.xml" />
                <include name="*/BPEL-*.xml" />
            </fileset>
            <report format="frames" todir="${bpeltest.results.dir}/html" />
        </junitreport>   
    </target>

    <!-- If pre-build.xml and post-build.xml exists, call its default target -->
    <condition property="exists.pre-build.xml">
        <available file="${process.dir}/pre-build.xml"/>
    </condition>
    <target name="pre-build" if="exists.pre-build.xml">
        <ant antfile="${process.dir}/pre-build.xml" inheritAll="false"/>
    </target>

    <condition property="exists.post-build.xml">
        <available file="${process.dir}/post-build.xml"/>
    </condition>
    <target name="post-build" if="exists.post-build.xml">
        <ant antfile="${process.dir}/post-build.xml" inheritAll="false"/>
    </target>

    <!-- Convenience targets -->
    <target name="deploy_test" depends="deploy, test"/> 
    
</project>
