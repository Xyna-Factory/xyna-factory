/*
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * Copyright 2022 GIP SmartMercial GmbH, Germany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 */
package com.gip.xyna.utils.exceptions.exceptioncode;

import com.gip.xyna.utils.exceptions.XynaException;

//DO NOT CHANGE
//GENERATED BY com.gip.xyna.utils.exceptions.utils.codegen.JavaClass 2010-06-02T10:09:58Z;
public class InvalidPatternException extends XynaException {


  private String requestedPattern;
  private String regexpForPattern;

  public InvalidPatternException(String requestedPattern, String regexpForPattern) {
    super(new String[]{"XYNA-00013", requestedPattern + "", regexpForPattern + ""});
    setRequestedPattern(requestedPattern);
    setRegexpForPattern(regexpForPattern);
  }

  public InvalidPatternException(String requestedPattern, String regexpForPattern, Throwable cause) {
    super(new String[]{"XYNA-00013", requestedPattern + "", regexpForPattern + ""}, cause);
    setRequestedPattern(requestedPattern);
    setRegexpForPattern(regexpForPattern);
  }

  protected InvalidPatternException(String[] args) {
    super(args);
  }

  protected InvalidPatternException(String[] args, Throwable cause) {
    super(args, cause);
  }

  public void setRequestedPattern(String requestedPattern) {
    this.requestedPattern = requestedPattern;
  }

  public String getRequestedPattern() {
    return requestedPattern;
  }

  public void setRegexpForPattern(String regexpForPattern) {
    this.regexpForPattern = regexpForPattern;
  }

  public String getRegexpForPattern() {
    return regexpForPattern;
  }

  public InvalidPatternException initCause(Throwable t) {
    return (InvalidPatternException) super.initCause(t);
  }


}
