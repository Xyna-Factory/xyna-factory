/*
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * Copyright 2022 GIP SmartMercial GmbH, Germany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 */
package com.gip.xyna.utils.exceptions.exceptioncode;

import com.gip.xyna.utils.exceptions.XynaException;

//DO NOT CHANGE
//GENERATED BY com.gip.xyna.utils.exceptions.utils.codegen.JavaClass 2010-06-02T10:09:58Z;
public class OverlappingCodePatternException extends XynaException {


  private String codeGroupNew;
  private String codeGroupOld;

  public OverlappingCodePatternException(String codeGroupNew, String codeGroupOld) {
    super(new String[]{"XYNA-00014", codeGroupNew + "", codeGroupOld + ""});
    setCodeGroupNew(codeGroupNew);
    setCodeGroupOld(codeGroupOld);
  }

  public OverlappingCodePatternException(String codeGroupNew, String codeGroupOld, Throwable cause) {
    super(new String[]{"XYNA-00014", codeGroupNew + "", codeGroupOld + ""}, cause);
    setCodeGroupNew(codeGroupNew);
    setCodeGroupOld(codeGroupOld);
  }

  protected OverlappingCodePatternException(String[] args) {
    super(args);
  }

  protected OverlappingCodePatternException(String[] args, Throwable cause) {
    super(args, cause);
  }

  public void setCodeGroupNew(String codeGroupNew) {
    this.codeGroupNew = codeGroupNew;
  }

  public String getCodeGroupNew() {
    return codeGroupNew;
  }

  public void setCodeGroupOld(String codeGroupOld) {
    this.codeGroupOld = codeGroupOld;
  }

  public String getCodeGroupOld() {
    return codeGroupOld;
  }

  public OverlappingCodePatternException initCause(Throwable t) {
    return (OverlappingCodePatternException) super.initCause(t);
  }


}
