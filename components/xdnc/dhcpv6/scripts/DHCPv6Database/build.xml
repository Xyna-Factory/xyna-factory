<?xml version="1.0" encoding="UTF-8"?>
<!--
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * Copyright 2022 Xyna GmbH, Germany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-->
<project name="build" default="build" basedir="." xmlns:resolver="antlib:org.apache.maven.resolver.ant">

  <property name="project.name" value="DHCPv6Database" />
  <property name="server.host" value="" />
  <property name="server.userid" value="" />
  <property name="root.dir" value="./../../../../../" />

  <import file="${root.dir}/installation/build/ant-xyna.xml" />

  <property name="target.dir" value="${basedir}/deploy" />
  
  <resolver:pom file="${basedir}/pom.xml" id="pom"/>

  <!-- ================================= 
                target: deploy             
               ================================= -->
  <target name="deploy"
          depends="build"
          description="Deploy jar file to xyna server.">
    
  </target>

  <!-- ================================= 
	         target: build             
	        ================================= -->
  <target name="build"
          description="Build jar file with java implementation of services."
          depends="resolve">
    <delete dir="${basedir}/classes" />
    <mkdir dir="${basedir}/classes" />
    <javac debug="on"
           encoding="iso8859-1"
           fork="yes"
           srcdir="${basedir}/src"
           destdir="${basedir}/classes">
      <classpath path="${basedir}/classes" />
      <classpath>
        <fileset dir="${basedir}/lib">
          <include name="**/*.jar" />
        </fileset>
      </classpath>
    </javac>
    <mkdir dir="${target.dir}" />
    <jar destfile="${target.dir}/${project.name}.jar">
      <fileset dir="${basedir}/classes" includes="**/*.class" />
      <fileset dir="${basedir}">
        <include name="Exceptions.xml" />
      </fileset>
    </jar>
    <copy todir="${target.dir}">
      <fileset dir="${basedir}/lib">
        <include name="*.jar" />
        <exclude name="**/xyna/*" />
      </fileset>
    </copy>
  </target>


  <!-- ================================= 
             target: resolve             
        =================================  -->
  <target name="resolve">
    <resolver:resolve>
      <resolver:dependencies pomRef="pom"/>
      <resolver:remoterepos refid="xyna.repository"/>
      <resolver:files refid="files" dir="${basedir}/lib/xyna" layout="{artifactId}-{classifier}-{version}.{extension}"/>
    </resolver:resolve>
    <loadLicenses targetDir="${basedir}/lib" />
    <!-- delete generated-resources ? -->
  </target>


  <!-- - - - - - - - - - - - - - - - - - 
	           target: genCodeClass                      
	          - - - - - - - - - - - - - - - - - -->
  <target name="genCodeClass" description="Generate code class for exceptions.">
    <java fork="true"
          failonerror="yes"
          classname="com.gip.xyna.utils.exceptions.ExceptionStorage">
      <classpath>
        <fileset dir="${basedir}/lib">
          <include name="**/*.jar" />
        </fileset>
      </classpath>
      <arg value="Exceptions.xml" />
      <arg value="${basedir}/src" />
      <arg value="y" />
    </java>
  </target>

  <!-- ================================= 
          target: updateMDM              
         ================================= -->
  <target name="updateMDM" description="Receive new mdm.jar from server">
    <input message="Enter password for user '${server.userid}' on host '${server.host}':"
           addproperty="server.password" />
    <sshexec host="${server.host}"
             username="${server.userid}"
             password="${server.password}"
             command="cd ${server.path}; ./xynafactory.sh buildxynajar"
             trust="true"
             failonerror="true" />
    <scp file="${server.userid}:${server.password}@${server.host}:${server.path}/mdm.jar"
         todir="${basedir}/lib/xyna"
         trust="true"
         verbose="true" />
  </target>

</project>
