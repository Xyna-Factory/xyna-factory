name: Semgrep Full Scan
# https://dev.to/0xdbe/github-how-to-enable-code-scanning-with-semgrep-501d
# https://semgrep.dev/docs/semgrep-ci/sample-ci-configs/#sample-github-actions-configuration-file

on:
  workflow_dispatch:
  schedule:
    - cron:  '37 13 * * 0'

jobs:

  semgrep-full:
      runs-on: ubuntu-latest
      container:
        image: returntocorp/semgrep
        
      # Skip any PR created by dependabot to avoid permission issues:
      if: (github.actor != 'dependabot[bot]')

      steps:

        # step 1
        - name: clone application source code
          uses: actions/checkout@v3
          
          
        # step 1a
        # https://gitlab.com/gitlab-org/security-products/analyzers/semgrep/-/tree/main/rules
        # later move to https://gitlab.com/gitlab-org/security-products/sast-rules/-/tree/main/
        - name: Get Gitlab ruleset
          run: |
            wget -O semgrep-main-rules.tar.gz https://gitlab.com/gitlab-org/security-products/analyzers/semgrep/-/archive/main/semgrep-main.tar.gz?path=rules
            tar xzf semgrep-main-rules.tar.gz

        # step 2
        # https://semgrep.dev/docs/cli-reference/
        - name: full scan
          run: |
            semgrep \
              --sarif --output report.sarif \
              --metrics=off --disable-version-check --no-rewrite-rule-ids \
              -f semgrep-main-rules/rules"

        # step 3
        - name: save report as pipeline artifact
          uses: actions/upload-artifact@v3
          with:
            name: report.sarif
            path: report.sarif

        # step 4
        - name: publish code scanning alerts
          uses: github/codeql-action/upload-sarif@v2
          with:
            sarif_file: report.sarif
            category: semgrep
