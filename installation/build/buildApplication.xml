<?xml version="1.0" encoding="UTF-8"?>
<!--
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * Copyright 2023 GIP SmartMercial GmbH, Germany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 -->
<project name="buildApplication" basedir=".">
    <import file="macros.xml" />

    <property name="antUtils.dir" value="${root.dir}/installation/build/" />
    <property name="common.lib.dir" value="${root.dir}/common/lib" />
    <property name="common.xyna.lib.dir" value="${common.lib.dir}/xyna" />

    <property file="${basedir}/server.properties" />
    <property file="${root.dir}/server.properties" />
    <property file="${application.dir}/workspace.properties" />


    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="${root.dir}/installation/build/lib/ant-contrib.jar" />
        </classpath>
    </taskdef>

    <!-- ================================= 
         target: build-application         
         ================================= -->
    <target name="build-application" depends="check">
        <xmlproperty file="application.xml" collapseAttributes="true" />
        <property name="app.name" value="${Application.applicationName}.${Application.versionName}" />
    
        <!-- set to false if the XMOM folder contains objects that should not be included in the application -->
        <property name="minify" value="false" />


        <ant antfile="build.xml" dir="${antUtils.dir}/lib" target="resolve" />

        <mkdir dir="${target.dir}" />
        <mkdir dir="${target.dir}/app" />
        <delete file="${target.dir}/${app.name}" failonerror="false" />

        <copy todir="${target.dir}/app">
            <fileset dir="." includes="AppMgmtAdd*" />
            <fileset dir="." includes="application.xml" />
        </copy>

        <replaceregexp file="${target.dir}/app/application.xml" match="factoryVersion=&quot;&quot;" replace="factoryVersion=&quot;CURRENT_VERSION&quot;" byline="true" />

        <if>
            <isset property="third_parties.dir" />
            <then>
                <copy todir="${third_parties.dir}/" failonerror="false" quiet="true">
                    <fileset dir="${target.dir}/app/third_parties" includes="*">
                        <include name="*" />
                        <exclude name="xyna" />
                    </fileset>
                </copy>
            </then>
        </if>

        <if>
            <equals arg1="${minify}" arg2="true" />
            <!-- copy all XMOM files -->
            <then>
                <zip destfile="${target.dir}/${app.name}.app">
                    <!--fileset dir="." includes="application.xml" /-->
                    <zipfileset dir="XMOM" includes="**/*.xml" prefix="XMOM" erroronmissingdir="false"/>
                    <fileset dir="${target.dir}/app" />
                </zip>
            </then>
            <!-- copy only XMOM files referenced in application.xml -->
            <else>
                <java classname="com.gip.xyna.xmcp.xfcli.scriptentry.CreateApplicationArchive" fork="true" failonerror="true">
                    <arg value="${basedir}/application.xml" />
                    <arg value="${target.dir}" />
                    <classpath>
                        <fileset dir="${antUtils.dir}lib/factory">
                            <include name="*.jar" />
                        </fileset>
                    </classpath>
                </java>
            </else>
        </if>

        <delete dir="${target.dir}/app" failonerror="true" />
    </target>


    <!-- ================================= 
         target: build-application-stub         
         ================================= -->
    <target name="build-application-stub">
        <xmlproperty file="application-stub.xml" collapseAttributes="true" />
        <property name="app.name" value="${Application.applicationName}.${Application.versionName}" />

        <mkdir dir="${target.dir}" />
        <mkdir dir="${target.dir}/stubapp" />
        <delete file="${target.dir}/${app.name}" failonerror="false" />

        <copy todir="${target.dir}/stubapp">
            <fileset dir="." includes="AppMgmtAdd*" />
            <fileset dir="." includes="application-stub.xml" />
        </copy>

        <if>
            <isset property="third_parties.dir" />
            <then>
                <copy todir="${third_parties.dir}/" failonerror="false" quiet="true">
                    <fileset dir="${target.dir}/stubapp/third_parties" includes="*">
                        <include name="*" />
                        <exclude name="xyna" />
                    </fileset>
                </copy>
            </then>
        </if>

        <java classname="com.gip.xyna.xmcp.xfcli.scriptentry.BuildApplicationStub" fork="true" failonerror="true">
            <arg value="${basedir}/application-stub.xml" />
            <arg value="${target.dir}" />
            <classpath>
                <fileset dir="${antUtils.dir}lib/factory">
                    <include name="*.jar" />
                </fileset>
            </classpath>
        </java>

        <delete dir="${target.dir}/stubapp" failonerror="true" />
    </target>

    <!-- ================================= 
         target: check                     
         ================================= -->
    <target name="check" 
        description="check that all XMOM-files exists" >

        <exec executable="${antUtils.dir}/checkApplicationFiles.sh" inputstring="" outputproperty="errors">
            <arg value="application.xml"/>
        </exec>

        <echo message="${errors}"/>
    </target>


    <!-- ================================= 
         target: create-mdm-jar         
         ================================= -->
    <target name="create-mdm-jar" description="Create mdm.jar locally">
        <xmlproperty file="application.xml" collapseAttributes="true" />

        <property name="java.compile.version" value="Java6" />
        <property name="output.dir" value="./mdm.jar" />
        <property name="xprc.xfractwfe.generation.storable.xmom.interfaces" value="" />
        <property name="apps.paths" value="${root.dir}" />
        <property name="recursive" value="true" />
        <property name="single.file" value="true" />
        <property name="types" value="DATATYPE,EXCEPTION" />

        <antcall target="compile-xmoms" />
    </target>

    <!-- ================================= 
         target: update-application-xml         
         ================================= -->
    <target name="update-application-xml" description="create application.xml on Xyna Factory">
        <xmlproperty file="application.xml" collapseAttributes="true" />
        <property name="applicationname" value="${Application.applicationName}" />
        <property name="applicationversion" value="${Application.versionName}" />

        <!-- create application.xml -->
        <custom-ssh-exec host="${server.host}" username="${server.userid}" command="${server.path}/xynafactory.sh buildapplicationxml -applicationName '${applicationname}' -workspaceName '${workspacename}' -versionName '${applicationversion}' -fileName '/tmp/application.xml'" />

        <!-- copy application.xml from xyna server-->
        <custom-scp-from-remote fromfile="${server.userid}@${server.host}:/tmp/application.xml" todir="${basedir}" />

    </target>

    <!-- ================================= 
         target: update-stub        
         ================================= -->
    <target name="update-stub" description="create application-stub.xml on Xyna Factory">
        <xmlproperty file="application-stub.xml" collapseAttributes="true" />
        <property name="applicationname" value="${Application.applicationName}" />
        <property name="applicationversion" value="${Application.versionName}" />

        <custom-ssh-exec host="${server.host}" username="${server.userid}" command="${server.path}/xynafactory.sh buildapplicationxml -applicationName '${applicationname}' -workspaceName '${workspacename}' -versionName '${applicationversion}' -fileName '/tmp/application-stub.xml' -cs" />

        <!-- copy application-stub.xml from xyna server-->
        <custom-scp-from-remote fromfile="${server.userid}@${server.host}:/tmp/application-stub.xml" todir="${basedir}" />
    </target>

    <!-- ================================= 
         target: compile-xmoms         
         ================================= -->
    <target name="compile-xmoms" description="compile xmom objects locally">
        <xmlproperty file="application.xml" collapseAttributes="true" />

        <property name="java.compile.version" value="Java6" />
        <property name="output.dir" value="./xmomclasses" />
        <property name="xprc.xfractwfe.generation.storable.xmom.interfaces" value="" />
        <property name="apps.paths" value="${root.dir}" />
        <property name="recursive" value="false" />
        <property name="single.file" value="false" />
        <property name="types" value="DATATYPE,EXCEPTION,WORKFLOW" />
        <property name="printclasspath" value="false" />

        <java classname="com.gip.xyna.xmcp.xfcli.scriptentry.XMOMCompiler" fork="true" failonerror="true">
            <arg value="app:${Application.applicationName}/${Application.versionName}" />
            <arg value="output:${output.dir}" />
            <arg value="storableInterfaces:${xprc.xfractwfe.generation.storable.xmom.interfaces}" />
            <arg line="sourcePaths:${apps.paths}" />
            <arg value="singleFile:${single.file}" />
            <arg value="recursive:${recursive}" />
            <arg value="types:${types}" />
            <env key="mdmjarjavaversion" value="${java.compile.version}" />
            <classpath>
                <fileset dir="${antUtils.dir}lib/factory">
                    <include name="*.jar" />
                </fileset>
            </classpath>
        </java>

    </target>


    <!-- ================================= 
         target: minify application xml         
         ================================= -->
    <target name="minify-application-xml" description="Minify an application.xml, removing implicit ordertypes and xmomentries">
        <java classname="com.gip.xyna.xmcp.xfcli.scriptentry.MinifyApplicationXml" fork="true" failonerror="true">
            <arg value="${basedir}/application.xml" />
            <arg value="${basedir}/application.xml_backup" />
            <classpath>
                <fileset dir="${antUtils.dir}lib/factory">
                    <include name="*.jar" />
                </fileset>
            </classpath>
        </java>

    </target>

</project>
